#!/home/ryton/.arturo/bin/arturo -e

;inputstr: read "input2015_13.txt"
;inputstr: read "example2015_8.txt"
;print inputstr
refldict: #[
AB:neg 2
AC:neg 62
AD: 65
AE: 21
AF:neg 81
AG:neg 4
AM:neg 80
BA: 93
BC: 19
BD: 5
BE: 49
BF: 68
BG: 23
BM: 29
CA:neg 54
CB:neg 70
CD:neg 37
CE:neg 46
CF: 33
CG:neg 35
CM: 10
DA: 43
DB:neg 96
DC:neg 53
DE:neg 30
DF:neg 12
DG: 75
DM:neg 20
EA: 8
EB:neg 89
EC:neg 69
ED:neg 34
EF: 95
EG: 34
EM:neg 99
FA:neg 97
FB: 6
FC:neg 9
FD: 56
FE:neg 17
FG: 18
FM:neg 56
GA: 45
GB: 76
GC: 63
GD: 54
GE: 54
GF: 30
GM: 7
MA: 31
MB:neg 32
MC: 95
MD: 91
ME:neg 66
MF:neg 75
MG:neg 99
AU: 0
BU: 0
CU: 0
DU: 0
EU: 0
FU: 0
GU: 0
MU: 0 

UA: 0
UB: 0
UC: 0
UD: 0
UE: 0
UF: 0
UG: 0
UM: 0 

]

refldictOLD: #[ ; with u, forsecond part
AA: 0
AB: 91,
AC: neg 117
AD: 108
AE: 29
AF: neg 178
AG: 41
AM: 111

BC: neg 51
BD: neg 91
BE: neg 40
BF: 74
BG: 99
BM: neg 3

CD: neg 90
CE: neg 115
CF: 24
CG: 28
CM: 105

DE: neg 64
DF: 44
DG: 129
DM: 71

EF: 78
EG: 88
EM: neg 165

FG: 48
FM: neg 131
GM: neg 91

AU: 0
BU: 0
CU: 0
DU: 0
EU: 0
FU: 0
GU: 0
MU: 0 

]
print refldict
others: permutate ["B" "C" "D" "E" "F" "G" "M" "U"]
;print others
allpos: new []
loop others 'aposs [
    temp: new aposs
    prepend 'temp "A"
    append 'temp "A"
    'allpos ++ @[temp]
    
]
;print allpos

storehappy: []
loop allpos 'anorder [
   ; print anorder
    sumhappy: new 0
    loop 0.. dec dec size anorder 'pos [

        
        p1: (anorder\[pos])
        p2: (anorder\[pos+1])
        n12: (join (@[p1 p2])) 
        n21: (join (@[p2 p1])) 
        ;print neighbours
        'sumhappy: sumhappy + refldict\[n12] + refldict\[n21]
        'storehappy ++ sumhappy 
    ]

    ;print sumhappy
]
print max storehappy 
;loop lines 'aline [
;    words: split.by: " " aline
;    ;print words
;    p1: words\[0]\[0];
;    p2: words\[10]\[0] ; 1st letter only
;    gainloss: (words\[2]\[0] ="g")? -> 1 -> neg 1 ; g / l
;    qty: to :integer words\[3] ; g / l
;    print [p1 p2 gainloss qty]
;    extend 'refldict #[ [p1 p2]: gainloss*qty]
;]
;print refldict
