#!/home/grimalkin/.arturo/bin/arturo -
do "../helperfiles/GetAoCData.art"
year: 2023
day: 8


t0:  round.to: 1 benchmark.get [
    
inputstr: chop read ~"../data/input|year|_|day|.txt"; for B
; toy example
demostr:
{LLR
AAA = (BBB, BBB) 
BBB = (AAA, ZZZ) 
ZZZ = (ZZZ, ZZZ) }


inputstr: split.lines  strip replace  inputstr {/[(=),]/} " "
route: first inputstr

directions: #[]
loop drop inputstr 'line [directions\[to :string slice line 0 2 ]: #["L":(slice line 7 9 ) "R":(slice line 12 14)]]
print ["parsed"]
]
;print route

solveA: $[route, directions,start][
pos: start
counter:0
    loop 1..27^3 'it [
        loop route 'dir [
        choice: directions\[pos]
        ;print choice
        'pos: choice\[dir]
        inc 'counter
        ;print counter
        if equal? pos "ZZZ" [return counter]
        ]
    ]
    ]
print select 1..10 [x][    even? x]
starts: select keys directions [dir] [((last dir) = to :char "A")]
ends: select keys directions [dir] [((last dir) = to :char "Z")]
print ["starts: "starts]
inspect  ends

solveaB: $[route, directions,start][
pos: start
counter:0
    loop 1..27^3 'it [
        loop route 'dir [
        choice: directions\[pos]
        ;print choice
        'pos: choice\[dir]
        inc 'counter
        ;print counter
        ;if "AAA" in keys directions
        if in? pos ends [
            'allends ++ counter
            return counter
        ]
        ]
        ]
    ]
    



t1: round.to: 1 benchmark.get  [ 
    start: "AAA"
    print [~"|year| |day| a: " ( solveA route directions start)] 
]
t2:  round.to: 1 benchmark.get  [ 
    
allends: []

loop starts 'start [
allends ++ solveaB route, directions,start
]
print allends
    print [~"|year| |day| b: " (print lcm allends)] 
]
print(~"Time to parse:  \n |year|\\|day|parse) |t0| \n Time to solve: \n |year|\\|day|a) |t2| \n |year|\\|day|b) |t1|")
