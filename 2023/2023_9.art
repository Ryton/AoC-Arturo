#!/home/grimalkin/.arturo/bin/arturo -e
do "../helperfiles/GetAoCData.art"
year: 2023
day: 9


t0: benchmark.get [
    
inputstr: chop read.lines ~"../data/input|year|_|day|.txt"; for B
; toy example
demostr: read.lines{0 3 6 9 12 15
1 3 6 10 15 21
10 13 16 21 30 45}
print ["parsed"]
]

fwd: $[series] [
    
    currdelta: map 1..(dec size series) [n] [(series\[n]-series\[n-1])]

    ;print [" ... "  color #black to :string last currdelta]
    ;print currdelta
    checkfirst: first currdelta
    checklast: last currdelta

    if? all? @[(zero? checkfirst) (zero? checklast)][
        return (last currdelta)   ]
    else [
        ;print ["next" (last series) + (last currdelta) "+..."]
        ;print [color #green to :string (last series) + (last currdelta) + (fwd currdelta)]
        return (last currdelta) + (fwd currdelta)]
]

solveA: $[inputstr][
sum map inputstr 's [
       series: to [:integer] split.by: " " s
        nextdelta: fwd series 
        (last series) + nextdelta ; return
        ]
    ]


solveB: $[inputstr][
sum map inputstr 's [
       series: reverse to [:integer] split.by: " " s
        nextdelta: fwd series 
        (last series) + nextdelta ; return
    ]
    ]



t1: benchmark.get  [ 
    print [~"|year| |day| a: " (solveA inputstr)] 
]
t2: benchmark.get  [ 
    print [~"|year| |day| b: " (solveB inputstr)] 
]
print(~"Time to parse:  \n |year|\\|day|parse) |t0| \n Time to solve: \n |year|\\|day|a) |t2| \n |year|\\|day|b) |t1|")
; too high:  1725987469
; right answer: 1725987467 => error bc checking only checklast, not both.
