#!/home/grimalkin/.arturo/bin/arturo -e
;==========================================
; Advent of Code solution 
;
; @file: tools/<year>_<day>.art (or default)
; @author: Mixomycetes
;==========================================

FilenamewoExtention: first split.by:"." last split.by:"/" env\_ ; eg /mnt/c/Users/Grim/AoC/2023/2023_1.art'
[year,day]: split.by:"_" FilenamewoExtention   ; 2023 1 ;print [day,year]


demoinput: [
"467..114.."
"...*......"
"..35..633."
"......#..."
"617*......"
".....+.58."
"..592....."
"......755."
"...$.*...."
".664.598.."
]
 


; actual inject example here (into inptustr)
;do "../helperfiles/GetAoCData.art"
year: 2023
day: 3
 inputstr: chop read.lines ~"../data/input|year|_|day|.txt"; for B

;print inputstr

parsemask: $[inputstr][mask: [] loop.with: 'x (inputstr) 'line [ loop.with: 'y (split line) 'char [ if? (in? char  ".0123456789")  [ ] else [ loop @[(x-1) (x+0) (x+1)] 'xx [ loop @[(y-1) (y+0) (y+1)] 'yy [ 'mask ++ @[@[xx yy]]] ]]]]    return unique mask];

t0: benchmark.get [
    
mask: parsemask inputstr ;inputstr
;starmask: parsestarmask  inputstr
;print starmask
print ["mask built"]
]
t1: benchmark.get [

; print [~"|year| |day| a: " solveA mask inputstr] ; 474678, 505766 too low   X  88390 505766  552395 507255  x -> too low? 474678 505766   => way too low . 153721 516573 x  156050 514347
 
 ] 
t2: benchmark.get  [
;print [~"|year| |day| b: " (solveB mask )] ; 2 less bc of white line in end
]

print(~"Time to parse:  \n |year|\\|day|parse) |t0| \n Time to solve: \n |year|\\|day|a) |t2| \n |year|\\|day|b) |t1|")
